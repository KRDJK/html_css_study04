/* 구글 웹폰트 로딩 */
@import url('https://fonts.googleapis.com/css2?family=Exo+2:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&family=Noto+Sans+KR:wght@300;400;500;700&display=swap');

/* reset!! */
a {
    color: inherit;
    text-decoration: none;
}

/* 기본버튼의 레이아웃 못생겨서 안나오게 */
button, input {
    outline: none;
    border: none;
    color: inherit;
}

/* common */
.clearfix::after {
    content: ' ';
    display: block;
    clear: both;
}

body {
    font-size: 14px;
    /* 구글에서 어케 쓰라고 알려주기까지 함. 사이트 하단부 확인 */
    font-family: 'Noto Sans KR', sans-serif;
}

/* 영어 폰트가 필요할 때는 클래스 en을 나중에 붙여주는 식으로 적용할거임. */
.en {
    font-family: 'Exo 2', sans-serif;
}

/* br태그는 줄바꿈인데 dp : none 이면 그 속성이 없어짐.
왜 굳이?? 라고 한다면 <모바일에서만!!!> 줄바꿈을 하라고 해주는 것. 
일단 없애고 나중에 모바일 환경에서 block으로 보이게 바꿔준다고 함.
none으로 해놓은 이유는 일단 지금은 하지 말라라는 뜻에서 해둔 것.*/
br.mo {
    display: none;
}


/* header */
header {
    /* background: tomato; */
    /* 투명도 부분 이해가 잘 안되네.. */
    background: rgba(0, 0, 0, 0.2);
    height: 100px;
    line-height: 100px;

    /* 앱솔이랑 비슷하나, 움직일 때 앱솔은 부모의 포지션 요소를 따지는데
    fixed는 언제나 브라우저 전체를 기준으로!!!! */
    position: fixed;
    top: 0;
    /* position: absolute; */
    /* 포지션 앱솔을 쓸 때 주의사항!!!
    가로 100%가 깨질 수 있음. 그래서 수동으로 가로를 다시 100%로 만들어줌. */
    width: 100%;

    /* 뒤에 나타난 포지션 때문에 얘가 뒤로 밀려서 그러지 말라고 
    부여함. 가장 앞에 있어야 하기 때문에 1000으로 확실히! */
    z-index: 1000;
}

header .inner-header {
    /* background: greenyellow; */
    width: 84%;
    margin: 0 auto;
}


/* float을 할 때 가로 조정을 하고 넣어줘도 되지만
일단 깨지지 않는다면 조정하지 않고 그냥 해봐라.
누가 사이즈가 넘쳐서 수평배치에서 어긋난다면 그 때 조정. */
header .inner-header .logo {
    /* background: skyblue; */
    float: left;
    /* 로고 자체가 너무 커서 줄여보자 */
    width: 200px;
    /* 그랬더니 박스보다 이미지가 더 커졌네? */
}

/* 이 img 태그 가로 조정은 박스 크기 보다 이미지의 크기가 더 커서
삐져나오기 때문에 조정해준 것!!! 자주 쓰게될 방법임. */
header .inner-header .logo img {
    width: 100%;
}

/* 헤더 가운데 부분 */
header .inner-header .gnb {
    /* background: violet; */
    float: left;
    margin-left: 80px;
}


/* .gnb나 .tnb가 nav이면서 li를 갖고 있기 때문에
수평 배치를 한번에 하기 위해서! */
header .inner-header nav li {
    float: left;
    /* margin-right: 80px; */
    font-size: 16px;
    color: #fff;
}
/*  */

header .inner-header .gnb li {
    margin-right: 80px;
}

header .inner-header .gnb li:hover {
    color: #ff8342;
}


/* 밑에 .tnb > li > a랑 똑같기 때문에 .nav li a로 묶어서 처리 가능!!!
나중에 한번에 교체해야 할 일이 생길 수 있기 때문.*/
header .inner-header .gnb li a {
    /* font-size: 16px; */
    /* color: #fff; */
    /* background: red; */
    display: block;
}


/* 헤더 오른쪽 부분 */
header .inner-header .tnb {
    /* background: orangered; */
    float: right;
}

header .inner-header .tnb li {
    margin-right: 25px;
}

header .inner-header .tnb li a {
    /* font-size: 16px; */
    /* color: #fff; */
    text-align: center;
    display: block;
}

/* 다른 방법
header .inner-header .tnb li:first-child,
header .inner-header .tnb li:nth-child(2) {} */
header .inner-header .tnb li:nth-child(-n+2) i {
    margin-right: 8px;
    font-size: 20px;
}

header .inner-header .tnb li:last-child i {
    margin-left: 5px;
}

header .inner-header .tnb li:last-child a {
    display: block;
    width: 105px;
    border: 1px solid #fff;
    border-radius: 30px;
    /* 위에 네줄까지 쳤더니 전체 블록 너비에 테두리 선이 그려짐.
    이런 경우에는 1. height를 고정 해주는 방법도 있음. */
    /* height: 20px; 이건 걍 해본 것. 원래는 auto */

    line-height: 2;
    /* height가 원래는 auto로 설정되어 있기 때문에 폰트 사이즈만큼의 16px일거임.
    그걸 2배 해줘서 32px로 된거임. */

    /* position: absolute를 쓰는 방법도 있음!!! */
    margin-top: 33px;
    /* margin-top으로 조정하는건 좀 원시적이긴 하지만 편하기도 한듯 
    이거 하나 때문에 position: absolute를 쓰기도..*/
}

header .inner-header .tnb li:last-child a:hover {
    background: #fff;
    color: #ff8342;
}


/* mobile 메뉴 햄버거 버튼 숨김처리 */
header .inner-header .gnb-mobile {
    display: none;
}

/* end header */


/* section main style */
section.main {
    background: url('../img/vis_4.jpg') no-repeat center / cover fixed;
   
    /* 세로가 너무 작아서 배경 사진이 풀 스크린으로 나오기 힘듦.
    세로는 기본값이 auto고 100%는 적용이 안됨. vh를 써야함. */
    height: 100vh;

    /* 밑에 .main-title에 기준점이 되기 때문!!! */
    /* 근데 이렇게 얘한테 포지션을 줬더니 위에 헤더가 사라짐
    stack over 개념 때문!!!
    position이 여러번 있을 때 뒤에 입력된 순으로 위로 올라가기 때문!!!
    그래서 헤더한테 z-index 값을 주면 됨!! */
    position: relative;
}

section.main .main-title {
    /* background: tomato; */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
    text-align: center;
    text-shadow: 2px 2px 10px rgba(0 ,0, 0, 0.7);
}

section.main .main-title h2 {
    font-size: 55px;
}

section.main .main-title p {
    font-size: 25px;
    margin: 20px 0;
}

section.main .main-title .view {
    display: block;
    font-size: 15px;
    border: 1px solid #fff;
    border-radius: 40px;
    width: 180px;
    padding: 8px 0;
    /* 텍스트 속성이 아닌 박스속성으로 첫줄 바꿔줬기 때문!! */
    margin: 0 auto;
    letter-spacing: 2px;
    
    /* 밑에 가상 박스가 얘한테(얘를 기준으로) 겹치게 하기 위해 */
    position: relative;
    overflow: hidden;
}

/* 가상박스를 만들어보자.. */
section.main .main-title .view::after {
    content: '';
    display: block;
    width: 0%;
    height: 100%;
    background: rgba(255,255,255,0.4);
    position: absolute;
    left: 0;
    top: 0;

    /* 똑같이 선을 깎을 필요 없이 위에 부모에 overflow를 활용해서
    숨길 수 있음. */
    /* border-radius: 40px; */


    transition: 0.3s;
}

/* : 하나를 앞에, 하나짜리가 ::(2개짜리)보다 앞에 있을 수는 없음. */
section.main .main-title .view:hover::after {
    width: 100%;
}

/* end section main style*/


/* section about style*/
section.about {
    /* background: orange; */
    padding: 80px 0;
}

/* about 뿐만이 아니라 innovation, me에 속한 겹치는 애들도 한번에 해주기 위해!!! */
section .title {
    text-align: center;
}

section .title h2 {
    font-size: 45px;
    color: #000;
    margin-bottom: 5px;
}

section .title p {
    font-size: 18px;
    color: #555;
}

section.about ul {
    width: 74%;
    margin: 30px auto;
    /* background: orange; */
    border-bottom: 1px solid #ddd;
}

section.about ul li {
    float: left;
    width: 33.3333%;
    /* border: 1px solid #000; */
    /* box-sizing: border-box; */

    /* height: 00px; */
}

section.about ul li .img-box {
    /* 밑에 a:hover를 하면 이미지가 커지면서 li를 가림.
    그래서 넘어가는건 안보이게 한다고 overflow를 걸 수 있음. */
    overflow: hidden;
}

/* 한번에 적용됨. */
section.about ul li .img-box img {
    width: 100%;
    transition: 0.6s;
}

/* a 박스에 해당하는 부분을 눌렀을 때의 그 자식인 img-box 클래스 속
이미지는~~ 이렇게 되어라 */
section.about ul li a:hover .img-box img {
    transform: scale(1.2);
}

section.about ul li a .text {
    padding: 25px;
}

section.about ul li a .text h3 {
    font-size: 20px;
    margin-bottom: 10px;
}

section.about ul li a .text p {
    font-size: 16px;
    margin-bottom: 20px;

    /* position: relative; */
}

section.about ul li a .text p.more {
    /* 일괄 대소문자 변경 <-> lowercase */
    text-transform: uppercase;
    font-weight: 700;
    /* background: skyblue; */

    /* 화살표 동그라미 아이콘이 들어가게 자리를 만들어줌. */
    padding-left: 40px;

    position: relative;
    /* position: absolute;
    bottom: 10px; */
}

/* 화살표 아이콘 자리를 마크업 하지 않아놨기 때문에!!! */
section.about ul li a .text p.more::before {
    /* 특수문자(우측 화살표)를 content: '';안에 넣으면 됨.  */
    content: '→';
    display: block;
    width: 30px;
    height: 30px;

    /* 화살표 모양 위치가 마음에 안들어! */
    line-height: 30px;
    
    background: #ff8342;
    /* 원형으로 만들어버릴 때는 50%로 해버리면 됨. */
    border-radius: 50%;

    /* ----여기까지 하면 more 위에 아이콘이 만들어짐. 
    겹쳐지게 만들기 위해*/
    position: absolute;
    left: 0;
    top: -5px;
}

/* end section.abot */


/* section.innovation style*/
section.innovation {
    margin-bottom: 150px;
}

section.innovation .img-box {
    width: 74%;
    margin: 50px auto 0;
    /* background: yellow; */

    /* img 속성으로 사진을 넣으면 img 크기만큼 세로값이 부여되지만,
    bg-img로 넣을 때는 세로 값을 미리 지정을 좀 해줘야 한다. */
    height: 540px;
    /* 이건 원본 사진의 높이가 이정도이기 때문에 이렇게 설정한 것.
    특별한 이유는 없다. */

    background: url('../img/product_1.jpg') no-repeat center / cover;    

    /* 이너 박스가 이 img-box를 기준으로 가야하기 때문 */
    position: relative;
}

section.innovation .img-box .inner {
    background: #3a3c4e;
    width: 80%;
    color: #fff;

    /* 공식으로 중앙으로 맞췄다가 수치 조절해서 원래 레이아웃대로 함. */
    position: absolute;
    left: 50%;
    top: 75%;
    transform: translate(-50%, 0%);
}

section.innovation .img-box .inner h3 {
    background: #fff;
    color: #222;
    font-size: 18px;
    padding: 25px 45px;
    box-sizing: border-box;
}

section.innovation .img-box .inner .bottom {
    padding: 35px 85px;
    box-sizing: border-box;
}

section.innovation .img-box .inner .bottom p {
    width: 70%;
    float: left;
    line-height: 1.6;
}

section.innovation .img-box .inner .bottom a {
    /* 가로 길이는 위에 p를 70으로 해서 30으로 해도 되지만 굳이
    안하고 자동적으로 올라가보게끔 놔둬봄. */
    float: right;
    /* float이 걸려있어서 a 태그는 인라인이지만 블록이 된거임
    포지션을 건 경우에도 같음!!! */

    background: #ff8342;
    border-radius: 50px;
    padding: 7px 30px;
}

section.innovation .img-box .inner .bottom a:hover {
    background: #f86010;
    /* 그라데이션 색을 넣는거나 똑같은 색을 넣고 투명도를 조절하는거랑 비슷하려나?? */
}

/* end section.innovation */


/* section.me style */
section.me {
    padding: 80px 0;
    margin-bottom: 150px;
    background: url('../img/me.jpg') no-repeat center / cover;
}

section.me ul.list {
    width: 74%;
    margin: 50px auto;
    /* background: orange; */
    border-top: 2px solid #000;
    border-bottom: 2px solid #000;
}


/* 안에 li까지 하고 싶지 않아서!! 직속 자식만 되도록!! */
section.me ul.list > li {
    padding: 30px 60px;
    /* border: 1px solid #000; */
}

section.me ul.list > li:first-child {
    border-bottom: 1px solid #ddd;
}

section.me ul.list > li h3 {
    font-size: 18px;
    margin-bottom: 20px;
    /* background: orange; */

    /* span의 포지션이 여기를 기준으로 삼아야 하기 때문. */
    position: relative;
}

section.me ul.list > li h3 span {
    position: absolute;
    /* span도 인라인이지만 포지션이 걸려서 블록이 됐음 */
    left: -35px;

    /* 현재 아이콘 모양은 텍스트로 들어가 있는 것이기 때문!! */
    color: #ff8342;
}

section.me ul.list > li p {
    line-height: 1.6;
    margin-bottom: 20px;
}

section.me ul.list > li .more {
    font-size: 16px;
    font-weight: bold;
}

section.me ul.list > li .more span {
    color: #ff8342;
    margin-left: 3px;
    font-size: 14px;
}

section.me ul.list ul.in {
    margin-bottom: 30px;
}

section.me ul.list ul.in li em {
    float: left;
    /* background: tomato; */
    font-weight: bold;

    /* 가로 길이를 억지로 늘려서 맞췄다. */
    width: 12%;
}

section.me ul.list ul.in li p {
    float: left;
    /* background: violet; */
    position: relative;
}

/* em과 p 사이에 주황색 조그만 점을 넣자. */
section.me ul.list ul.in li p::before {
    content: '';
    /* display: block; -> 포지션을 썼기 때문에 생략 가능 */
    width: 4px;
    height: 4px;
    border-radius: 50%;
    background: #ff8342;
    position: absolute;
    left: -40px;
    top: 10px;
}

#incruit-btn {
    display: block;
    width: 280px;
    background: #ff8342;
    color: #fff;
    font-weight: 700;
    border-radius: 50px;
    margin: 0 auto;
    padding: 10px 0;

    /* 버튼 리셋을 해놔서 커서 포인터가 사라졌음. */
    cursor: pointer;
}

/* end section.me */